version: 1.77.{build}
pull_requests:
  do_not_increment_build_number: true
environment:
  cert_path: tools\cert\CodeSigning_Cert_mRemoteNG_DigiCert.p12
  cert_decrypt_pwd:
    secure: QK1ldldzIUSVA0u+OtbHixPmsXHAO9ksOKcyByq0FHM=
  cert_pwd:
    secure: Fni66m2OgoTxjRzahUNUUNHl5gGwTXLvXIMQYiOMqX8=
branches:
  only:
  - /release.*/
  - master
  - develop
skip_non_tags: true
skip_branch_with_pr: true
image: Visual Studio 2017
configuration: Deployment
shallow_clone: true
install:
- ps: >-
    date

    mRemoteV1\Resources\CitrixReceiver.exe ENABLE_SSON="No" /silent /noreboot /EnableCEIP=false /AutoUpdateCheck=disabled /EnableTracing=false | out-null

    date


    iex ((New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/appveyor/secure-file/master/install.ps1'))
build_script:
- ps: "Get-ChildItem Env:\nThrow \"Testing\"\nif([string]::IsNullOrEmpty($Env:APPVEYOR_BUILD_FOLDER)) {\n    Write-Output \"NOT running via Appveyor - Exiting\"\n    Throw \"NOT running via Appveyor - Exiting\"\n}\n\n$appvDir = $Env:APPVEYOR_BUILD_FOLDER\n	\n$SIGCHECK=\"Tools\\exes\\sigcheck.exe\"\n$SEVENZIP=\"Tools\\7zip\\7za.exe\"\n\nWrite-Output \"Appveyor Build Dir: '$($appvDir)'\"\n#$ConfigurationName = $Env:CONFIGURATION.Trim()\n#Write-Output \"Config Name (tirmmed): '$($ConfigurationName)'\"\n\nWrite-Output \"Decrypt Cert\"\n& appveyor-tools\\secure-file -decrypt \"$($Env.cert_path).enc\" -secret \"$Env.cert_decrypt_pwd\"\n\nif($LastExitCode -eq $false) {\n		Write-Output \"Could not decrypt cert\"\n		Throw \"Could not decrypt cert\"\n}\n\nWrite-Output \"Restoring NuGets\"\n& nuget restore\n\n\nWrite-Output \"Build Release Installer\"\n& msbuild \"$($appvDir)\\mRemoteV1.sln\" /nologo /t:Clean,Build /p:Configuration=\"Release Installer\" /p:Platform=x86 /p:CertPath=\"$($Env.cert_path)\" /p:CertPassword=($Env.cert_decrypt_pwd) /m /verbosity:normal /logger:\"C:\\Program Files\\AppVeyor\\BuildAgent\\Appveyor.MSBuildLogger.dll\"\n\nWrite-Output \"Packaging debug symbols\"\n   \n$version = & $SIGCHECK /accepteula -q -n \"mRemoteV1\\bin\\Release Installer\\mRemoteNG.exe\"\n\nWrite-Output \"Version is $($version)\"\n\n$zipFilePrefix = \"mRemoteNG-symbols\"\n\n\n$outputZipPath=\"Release\\$zipFilePrefix-$($version).zip\"\n\nWrite-Output \"Creating debug symbols ZIP file $($outputZipPath)\"\nRemove-Item -Force  $outputZipPath -ErrorAction SilentlyContinue\n$SymPath = (Join-Path -Path \"mRemoteV1\\bin\\Release\" -ChildPath \"*.pdb\")\nif(Test-Path \"$SymPath\") {\n	& $SEVENZIP a -bt -bd -bb1 -mx=9 -tzip -y -r $outputZipPath \"$SymPath\"\n} else {\n	Write-Output \"No Debugging Symbols Found...\"\n}\n    \n\nWrite-Output \"Build Release Portable\"\n& msbuild \"$($appvDir)\\mRemoteV1.sln\" /nologo /t:Clean,Build /p:Configuration=\"Release Portable\" /p:Platform=x86 /p:CertPath=\"$($Env.cert_path)\" /p:CertPassword=$($Env.cert_decrypt_pwd) /m /verbosity:normal /logger:\"C:\\Program Files\\AppVeyor\\BuildAgent\\Appveyor.MSBuildLogger.dll\"\n\n\nWrite-Output \"Packaging Release Portable ZIP\"\n\n$version = & $SIGCHECK /accepteula -q -n \"mRemoteV1\\bin\\Release Portable\\mRemoteNG.exe\"\n\nWrite-Output \"Version is $($version)\"\n\n$zipFilePrefix = \"mRemoteNG-Portable-symbols\"\n$outputZipPath=\"Release\\$zipFilePrefix-$($version).zip\"\n\nWrite-Output \"Creating debug symbols ZIP file $($outputZipPath)\"\nRemove-Item -Force  $outputZipPath -ErrorAction SilentlyContinue\n$SymPath = (Join-Path -Path \"mRemoteV1\\bin\\Release Portable\" -ChildPath \"*.pdb\")\nif(Test-Path \"$SymPath\") {\n	& $SEVENZIP a -bt -bd -bb1 -mx=9 -tzip -y -r $outputZipPath \"$SymPath\"\n} else {\n	Write-Output \"No Debugging Symbols Found...\"\n}\n\n$PortableZip=\"Release\\mRemoteNG-Portable-$($version).zip\"\n\nRemove-Item -Recurse \"mRemoteV1\\bin\\package\" -ErrorAction SilentlyContinue | Out-Null\nNew-Item \"mRemoteV1\\bin\\package\" -ItemType  \"directory\" | Out-Null\n\nCopy-Item \"mRemoteV1\\Resources\\PuTTYNG.exe\" -Destination \"mRemoteV1\\bin\\package\"\n\nCopy-Item \"mRemoteV1\\bin\\Release Portable\\*\" -Destination \"mRemoteV1\\bin\\package\" -Recurse  -Force \nCopy-Item \"*.txt\" -Destination \"mRemoteV1\\bin\\package\"\n\nWrite-Output \"Creating portable ZIP file $($PortableZip)\"\nRemove-Item -Force  $PortableZip -ErrorAction SilentlyContinue\n& $SEVENZIP a -bt -bd -bb1 -mx=9 -tzip -y -r $PortableZip \".\\mRemoteV1\\bin\\package\\*.*\""
test:
  assemblies:
    only:
    - mRemoteNGTests\bin\Release\mRemoteNGTests.dll
    - mRemoteNGTests\bin\Release Portable\mRemoteNGTests.dll
artifacts:
- path: Release\*.msi
  name: mRemoteNG-installer.msi
- path: Release\mRemoteNG-Portable-1.*.zip
  name: mRemoteNG-portable.zip
- path: Release\mRemoteNG-Portable-symbols*.zip
  name: mRemoteNG-Portable-symbols.zip
- path: Release\mRemoteNG-symbols*.zip
  name: mRemoteNG-symbols.zip
deploy:
- provider: Environment
  name: GitHubRelease